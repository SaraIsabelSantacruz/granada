{"version":3,"file":"7.6d639c3521a00a982123.hot-update.js","sources":["webpack:///containers/form.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Router} from '../routes'\n\nclass Form  extends Component{\n\n  state = {\n    form:{}\n  }\n\n  sendForm = (event) => {\n    event.preventDefault()\n    Router.pushRoute('index')\n    if(this.props.type == 'update') {\n      fetch(`https://fakerestapi.azurewebsites.net/api/Books/${this.props.item.ID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.form)\n      })\n      .catch(err => console.error(err))\n      .then(res => res.json())\n      .then(thing => console.log(thing))\n    }\n    else {\n      fetch(`https://fakerestapi.azurewebsites.net/api/Books`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.form)\n      })\n      .catch(err => console.log(err))\n      .then(res => res.json())\n      .then(thing => console.log(thing))\n    }\n  }\n\n  componentDidMount(){\n    if(this.props.type == 'update') {\n      const elements = document.querySelectorAll('.FormInput-Input');\n\n      elements[1].value = this.props.item.ID\n      elements[2].value = this.props.item.Title\n      elements[3].value = this.props.item.Description\n      elements[4].value = this.props.item.PageCount\n      elements[5].checked = this.props.item.Excerpt\n      elements[6].checked = this.props.item.PublishDate\n\n      this.setState({\n        form:{\n          ID: this.props.item.ID,\n          Title: this.props.item.Title,\n          Description: this.props.item.Description,\n          PageCount: this.props.item.PageCount,\n          Excerpt: this.props.item.Excerpt,\n          PublishDate: this.props.item.PublishDate\n        }\n      })\n    }\n  }\n\n  onChange = (event) =>{\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      form:{\n        ...this.state.form,\n        [name]: target.value\n      }\n    });\n  }\n\n  render(){\n    console.log(this.state.form);\n    return(\n      <div className=\"container-form\">\n        <div className=\"container-img\">\n          <img\n            src={`http://picsum.photos/200/300/?image=${this.props.item.ID}`}\n          >\n\n          </img>\n        </div>\n        <form className=\"PostForm\">\n          <div className=\"FormInput\">\n            <label htmlFor=\"ImageURL\" className=\"FormInput-Label\">Image</label>\n            <input\n                type=\"text\"\n                className=\"FormInput-Input\"\n                name=\"ImageURL\"\n            />\n          </div>\n           <div className=\"FormInput\">\n            <label htmlFor=\"ID\" className=\"FormInput-Label\">ID</label>\n            <input\n              type=\"text\"\n              className=\"FormInput-Input\"\n              name=\"ID\"\n              onChange={(ev) => { this.setState({ form: { ...this.state.form, ID: ev.target.value } }) }}\n            />\n          </div>\n          <div className=\"FormInput\">\n            <label htmlFor=\"Title\" className=\"FormInput-Label\">Title</label>\n            <input\n              type=\"text\"\n                className=\"FormInput-Input\"\n                name=\"Title\"\n                onChange={(ev) => { this.setState({ form: { ...this.state.form, Title: ev.target.value } }) }}\n            />\n          </div>\n          <div className=\"container-numbers\">\n            <div className=\"FormInput\">\n              <label htmlFor=\"PublishDate\" className=\"FormInput-Label\">Fecha</label>\n              <input\n                  type=\"date\"\n                  className=\"FormInput-Input\"\n                  name=\"PublishDate\"\n                  onChange={(ev) => { this.setState({ form: { ...this.state.form, PublishDate: ev.target.value } }) }}\n              />\n            </div>\n            <div className=\"FormInput\">\n              <label htmlFor=\"PageCount\" className=\"FormInput-Label\">Nº páginas</label>\n              <input\n                  type=\"text\"\n                  className=\"FormInput-Input\"\n                  name=\"PageCount\"\n                  onChange={(ev) => { this.setState({ form: { ...this.state.form, PageCount: ev.target.value } }) }}\n              />\n            </div>\n          </div>\n          <div className=\"FormInput\">\n            <label htmlFor=\"Description\" className=\"FormInput-Label\">Descripcion</label>\n            <input\n                type=\"text\"\n                className=\"FormInput-Input\"\n                name=\"Description\"\n                onChange={(ev) => { this.setState({ form: { ...this.state.form, Description: ev.target.value } }) }}\n            />\n          </div>\n          <div className=\"FormInput Textarea\">\n            <label htmlFor=\"extracto\" className=\"FormInput-Label\">Extracto</label>\n            <textarea\n                type=\"text\"\n                className=\"FormInput-Input\"\n                name=\"extracto\"\n                onChange={(ev) => { this.setState({ form: { ...this.state.form, Excerpt: ev.target.value } }) }}\n            />\n          </div>\n          <button onClick={this.sendForm} className=\"Form-Btn\">Guardar</button>\n        </form>\n        <style jsx>{`\n          .container-form {\n            text-align: center;\n            margin-top: 2%;\n          }\n          .container-img{\n            border: 1px solid black;\n            max-width: 200px;\n            margin: auto;\n            max-height: 300px;\n          }\n          .PostForm{\n            width: 50%;\n            margin: 5% auto;\n            text-align: left;\n          }\n          .FormInput{\n            margin:10px;\n            display: flex;\n            justify-content: space-between;\n          }\n          .FormInput input{\n            width: 78%;\n            display: inline-block;\n            height: 20px;\n            border-radius: 5px;\n            text-shadow: none;\n            box-shadow: none;\n            border: 1px solid #8080805c;\n          }\n          .FormInput label{\n            margin-right: 5%;\n            width: 80px;\n            text-align: end;\n          }\n          .Textarea{\n            display:flex;\n          }\n          .Textarea textarea{\n            margin: 0px;\n            height: 99px;\n            width: 482px;\n            border-radius: 5px;\n            border: 1px solid #80808069;\n          }\n          .container-numbers{\n            display: flex;\n            justify-content: space-between;\n          }\n          .container-numbers .FormInput{\n            width:50%;\n          }\n          .container-numbers input{\n            width:65%;\n          }\n          .Form-Btn{\n            padding: 8px 22px;\n            border-radius: 5px;\n            background: #DA111B;\n            color: #fff;\n            font-size: 17px;\n            float: right;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n\nexport default Form;\n\n\n\n// WEBPACK FOOTER //\n// containers/form.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;AA0BA;AACA;AACA;AACA;AAAA;AACA;AADA;AAMA;;;;;;AAjCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;;;AAazEA;AAAA;AAAA;AA6IA;;;;AAtNA;AACA;AAwNA;;;;A","sourceRoot":""}